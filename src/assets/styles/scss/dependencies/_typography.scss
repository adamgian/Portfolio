//  --------------------------------------------------------------------------------
//  _typography.scss
//  --------------------------------------------------------------------------------

//  Typography
//   ├─ General
//   ├─ Headings
//   ├─ Paragraphs
//   └─ Other





//  --------------------------------------------------------------------------------
//  Typography
//  --------------------------------------------------------------------------------

//  General ------------------------------------------------------------------------

    // The following elements can have text and
    // therefore should get typograhic styling.
    h1, h2, h3, p, a, i,
    button, li, th, td,
    div, span, section, pre,
    label, input, textarea {
        // Allows for font styles (color, typeface, size
        // and weight) to be later inherited by styles on
        // the specific element or parent.
        color:                  inherit;
        font-family:            inherit;
        font-size:              inherit;
        font-style:             inherit;
        font-weight:            inherit;
        line-height:            inherit;
        // Fix sloppy rendering of font and icons
        // on both chrome and firefox on Mac OSX.
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing:grayscale;
    }

    html {
        color:                  $color--scorpion;
        font-family:            $font-fallback;
        // Fallback if fluid size is not applied.
        font-size:              $font-size--body;
        font-weight:            normal;
        line-height:            $baseline;
        transition:             font-size 0.2s ease-in-out;

        // Once typekit font is successfully downloaded —
        // only then set it as font to prevent copy from
        // not being rendered in some browsers.
        &.wf-active {
            font-family:            $font-primary;
        }
    }

    // Fluid typography
    html {
        @include breakpoint( 0, s ) {
            font-size:              calc( #{$font-size--body - 2} + 2 * (( 100vw - #{$breakpoint--min} ) / ( #{strip-unit( $breakpoint--s ) - 20} - #{strip-unit( $breakpoint--min )} )) );
        }

        @include breakpoint( s, m ) {
            font-size:              calc( #{$font-size--body - 1} + 1 * (( 100vw - #{$breakpoint--s} ) / ( #{strip-unit( $breakpoint--m ) - 20} - #{strip-unit( $breakpoint--s )} )) );
        }

        @include breakpoint( m ) {
            font-size:              calc( #{$font-size--body - 1} + 1 * (( 100vw - #{$breakpoint--m} ) / ( #{strip-unit( $breakpoint--l )} - #{strip-unit( $breakpoint--m )} )) );
        }

        // Stop font size from shrinking once under
        // the minimum breakpoint size.
        @include breakpoint( 0, $breakpoint--min ) {
            font-size:              $font-size--body - 2px;
        }

        // Stop font size from increasing once over
        // the large breakpoint.
        @include breakpoint( l ) {
            font-size:              $font-size--body;
        }
    }


//  Headings -----------------------------------------------------------------------

    h1 {
        font-size:              $font-size--head;
        margin-top:             0.875rem;
        margin-bottom:          0.875rem;
    }

    h2 {
        font-size:              $font-size--subhead;
    }


//  Paragraphs ---------------------------------------------------------------------

    p {
        vertical-align:         bottom;
    }

    p + p {
        margin-top:             $baseline;
    }

    .p--lead {
        font-size:              $font-size--subhead;
    }


//  Other --------------------------------------------------------------------------

    abbr {
        font-variant:           none;
        text-decoration:        none;
        text-transform:         none;
    }